{
    "atricles": [{
        "titile": "go 学习笔记之10 分钟简要理解 go 语言闭包技术",
        "href": "/p/6560732fc540",
        "content": "\n      闭包是主流编程语言中的一种通用技术,常常和函数式编程进行强强联合,本文主要是介绍 Go 语言中什么是闭包以及怎么理解闭包. 如果读者对于 Go ...\n    "
    }, {
        "titile": "gitbook 入门教程之还在搞公众号互推涨粉?gitbook 集成导流工具,轻轻松松躺增粉丝!",
        "href": "/p/73e153fd5ff1",
        "content": "\n      相信大多数博客作者都或多或少有过这样想法: 现在各种平台这么多,想要实现全平台发布就要到处复制粘贴,等我有空一定做统一平台一次性全部解决! 不知...\n    "
    }, {
        "titile": "go 学习笔记之仅仅需要一个示例就能讲清楚什么闭包",
        "href": "/p/290a1ffdbb19",
        "content": "\n      本篇文章是 Go 语言学习笔记之函数式编程系列文章的第二篇,上一篇介绍了函数基础,这一篇文章重点介绍函数的重要应用之一: 闭包 空谈误国,实干兴...\n    "
    }, {
        "titile": "go 学习笔记之学习函数式编程前不要忘了函数基础",
        "href": "/p/98ac728ea481",
        "content": "\n      在编程世界中向来就没有一家独大的编程风格,至少目前还是百家争鸣的春秋战国,除了众所周知的面向对象编程还有日渐流行的函数式编程,当然这也是本系列文...\n    "
    }, {
        "titile": "go 学习笔记之无心插柳柳成荫的接口和无为而治的空接口",
        "href": "/p/549580b5298d",
        "content": "\n      如果你还了解编程概念中的接口概念,那么我建议你最好还是先阅读上一篇文章.详情请点击 go 学习笔记之万万没想到宠物店竟然催生出面向接口编程? ,...\n    "
    }, {
        "titile": "go 学习笔记之万万没想到宠物店竟然催生出面向接口编程?",
        "href": "/p/3e7e7d2aac98",
        "content": "\n      到底是要猫还是要狗 在上篇文章中,我们编撰了一则简短的小故事用于讲解了什么是面向对象的继承特性以及 Go 语言是如何实现这种继承语义的,这一节我...\n    "
    }, {
        "titile": "go 学习笔记之是否支持以及如何实现继承",
        "href": "/p/93d32d836f1f",
        "content": "\n      熟悉面向对象的小伙伴们可能会知道封装,继承和多态是最主要的特性,为什么前辈们会如此看重这三种特性,真的那么重要吗? 什么是封装 什么是封装,封装...\n    "
    }, {
        "titile": "go 学习笔记之详细说一说封装是怎么回事",
        "href": "/p/61d289ea6f9e",
        "content": "\n      关注公众号[雪之梦技术驿站]查看上篇文章 猜猜看go是不是面向对象语言？能不能面向对象编程？ 虽然在上篇文章中,我们通过尝试性学习探索了 Go ...\n    "
    }, {
        "titile": "go 学习笔记之go是不是面向对象语言是否支持面对对象编程?",
        "href": "/p/ac04dace7d54",
        "content": "\n      面向对象编程风格深受广大开发者喜欢,尤其是以 C++, Java 为典型代表的编程语言大行其道,十分流行! 有意思的是这两中语言几乎毫无意外都来...\n    "
    }, {
        "titile": "go 学习笔记之数组还是切片都没什么不一样",
        "href": "/p/2eb7b49996ba",
        "content": "\n      上篇文章中详细介绍了 Go 的基础语言,指出了 Go 和其他主流的编程语言的差异性,比较侧重于语法细节,相信只要稍加记忆就能轻松从已有的编程语言...\n    "
    }, {
        "titile": "go 学习笔记之值得特别关注的基础语法有哪些",
        "href": "/p/3d9c001da82e",
        "content": "\n      在上篇文章中,我们动手亲自编写了第一个 Go 语言版本的 Hello World,并且认识了 Go 语言中有意思的变量和不安分的常量. 相信通过...\n    "
    }, {
        "titile": "go 学习笔记之有意思的变量和不安分的常量",
        "href": "/p/7b5fe2a220f5",
        "content": "\n      首先希望学习 Go 语言的爱好者至少拥有其他语言的编程经验,如果是完全零基础的小白用户,本教程可能并不适合阅读或尝试阅读看看,系列笔记的目标是站...\n    "
    }, {
        "titile": "go 学习笔记之走进Goland编辑器",
        "href": "/p/06a5e36cef68",
        "content": "\n      工欲善其事必先利其器,命令行工具虽然能够在一定程度上满足基本操作的需求,但实际工作中总不能一直使用命令行工具进行编码操作吧? 学习 Go 语言同...\n    "
    }, {
        "titile": "go 学习笔记之工作空间",
        "href": "/p/a9d7c75029a6",
        "content": "\n      搭建好 Go 的基本环境后,现在可以正式开始 Go 语言的学习之旅,初学时建议在默认的 GOPATH 工作空间规范编写代码,基本目录结构大概是这...\n    "
    }, {
        "titile": "go 学习笔记之环境搭建",
        "href": "/p/9b0a620ebe01",
        "content": "\n      千里之行始于足下,开始 Go 语言学习之旅前,首先要搭建好本地开发环境,然后就可以放心大胆瞎折腾了. Go 的环境安装和其他语言安装没什么特别注...\n    "
    }, {
        "titile": "go 学习笔记之初识 go 语言",
        "href": "/p/4b03cf6fcec7",
        "content": "\n      Go 是一种开源编程语言,可以轻松构建简单,可靠,高效的软件. 摘录自 github: https://github.com/golang/go...\n    "
    }, {
        "titile": "工具资源系列之给 windows 虚拟机装个 mac",
        "href": "/p/d4f51d415479",
        "content": "\n      众说周知,Mac 很好但也很贵,对一般大众而言,漂亮简洁高颜值,对软件开发者而言,方便省心有点贵. 好到什么程度? 内置大量常用的开发工具,省去...\n    "
    }, {
        "titile": "工具资源系列之 github 上各式各样的小徽章从何而来?",
        "href": "/p/b8250af73744",
        "content": "\n      简书上传外链图片有问题,总不能让我一个个手动保存本地再上传吧?所以还是请查看慕课手记或者直接查看官网. 前言 平时大家在在逛 github 时或...\n    "
    }, {
        "titile": "php 学习笔记之日期时间操作一箩筐",
        "href": "/p/619aa81a75d7",
        "content": "\n      格式化日期时间 date : 格式化日期时间 场景 将当前日期时间或者特定日期时间格式化输出为特定格式的字符串,常用于人性化展示信息. 说明 返...\n    "
    }, {
        "titile": "php 学习笔记之关于时区的那点事",
        "href": "/p/d9f96a928095",
        "content": "\n      科普一下什么是时区 众所周知,地球绕着太阳转的同时也会自转,因此同一时刻不同地区所接收到太阳照射的情况不同,所以有的地区是日出,有的地区是日落,...\n    "
    }, {
        "titile": "php 学习笔记之搭建开发环境(mac版)",
        "href": "/p/0db7f66cccd8",
        "content": "\n      Mac 系统默认集成了很多开发工具,其中就包括 php 所需要的一些软件工具. 下面我们将搭建最简单的 php 开发环境,每一步都会验证上一步的...\n    "
    }, {
        "titile": "工具资源系列之给 windows 虚拟机装个 ubuntu",
        "href": "/p/a6266112a505",
        "content": "\n      前面我们已经介绍了如何在 Windows 宿主机安装 VMware 虚拟机,这节我们将利用安装好的 VMware 软件安装 Ubuntu 系统....\n    "
    }, {
        "titile": "工具资源系列之给 windows 虚拟机装个 centos",
        "href": "/p/044cd73c0d98",
        "content": "\n      前面我们已经介绍了如何在 Windows 宿主机安装 VMware 虚拟机,这节我们将利用安装好的 VMware 软件安装 centos 系统....\n    "
    }, {
        "titile": "工具资源系列之给 windows 虚拟机装个 windows",
        "href": "/p/624566011b4f",
        "content": "\n      前面我们已经介绍了如何在 Windows 宿主机安装 VMware 虚拟机,这节我们将利用安装好的 VMware 软件安装 Windows 系统...\n    "
    }, {
        "titile": "工具资源系列之给 windows 装个 vmware 虚拟机",
        "href": "/p/59a0079d4089",
        "content": "\n      如果长时间处于同一种环境,慢慢得我们会觉得有些无聊,所以适当地出去走走看看外面的世界能带给我们不一样的体验. 所以,何不出去走走,看看另一个世界...\n    "
    }, {
        "titile": "gitbook 入门教程之解决windows热加载失败问题",
        "href": "/p/7b107dfb7522",
        "content": "\n      破镜如何贴花黄 gitbook 在 Windows 系统无法热加载,总是报错! gitbook 是一款文档编写利器,可以方便地 markdown...\n    "
    }, {
        "titile": "git 入门教程之 git bash 竟然不支持 tree 命令",
        "href": "/p/4f95ebf7d143",
        "content": "\n      开门见山 git bash 是 Windows 用户安装 git 时默认安装的命令行工具,不仅界面漂亮功能也不错,大多数情况下可以替代 Wind...\n    "
    }, {
        "titile": "工具资源系列之给虚拟机装个ubantu",
        "href": "/p/6d5ffad6a603",
        "content": "\n      前文我们已经讲解了如何在 mac 系统上安装虚拟机软件,这节我们接着讲解如何利用虚拟机安装 Ubuntu 镜像. 安装镜像的大致步骤基本相同,只...\n    "
    }, {
        "titile": "工具资源系列之给虚拟机装个centos",
        "href": "/p/411b109c5ad7",
        "content": "\n      前文我们已经讲解了如何在 mac 系统上安装虚拟机软件,这节我们接着讲解如何利用虚拟机安装 centos 镜像. 安装镜像的大致步骤基本相同,只...\n    "
    }, {
        "titile": "工具资源系列之给虚拟机装个windows",
        "href": "/p/d13729a24770",
        "content": "\n      前面我们介绍了如何在 mac 宿主机安装 VMware 虚拟机软件,本节我们将继续介绍如何给虚拟机安装镜像,切换不同的操作系统. VMware ...\n    "
    }, {
        "titile": "工具资源系列之给mac装个虚拟机",
        "href": "/p/04b7c7bcf514",
        "content": "\n      mac 系统安装虚拟机目前有两种主流软件,一种是 Parallels Desktop ,另一种是 vmware. 本教程选用的是 vmware ...\n    "
    }, {
        "titile": "关于写作那些事之我该选择哪种格式",
        "href": "/p/85f10bb95ab1",
        "content": "\n      markdown和富文本 不知道你是否留意过平时写作时的编辑器,有的是 markdown 编辑器,有的是各种富文本编辑器,到底选择哪一个相信你有...\n    "
    }, {
        "titile": "关于写作那些事之如何写作",
        "href": "/p/c78ae5f8b9b4",
        "content": "\n      越来越多的人想写个人博客或者打算做自媒体,笔者也是一样.最近在学习如何写博客,分享下创作经历,避免走弯路. 首先在于定位,不同的定位决定了不同的...\n    "
    }, {
        "titile": "关于写作那些事之利用 js 统计各大博客阅读量",
        "href": "/p/9eaadd0fee75",
        "content": "\n      在日常文章数据统计的过程中,纯手动方式已经难以应付,于是乎,逐步开始了程序介入方式进行统计. 在上一节中,探索利用 csv 文件格式进行文章数据...\n    "
    }, {
        "titile": "关于写作那些事之github告诉我构建失败,然后呢?",
        "href": "/p/3441940065b5",
        "content": "\n      The page build failed for the master branch with the following error 问题描...\n    "
    }, {
        "titile": "gitbook 入门教程之准备阶段",
        "href": "/p/f0c3a62f1de3",
        "content": "\n      主要包括两部分: 前置知识和操作工具. 前置知识主要是涉及到 git 以及 markdown 的相关知识,其中 git 是分布式版本控制系统,方...\n    "
    }, {
        "titile": "关于写作那些事之终于还是无法忍受纯人工统计数据",
        "href": "/p/3b4a0aa66604",
        "content": "\n      背景 作为正在探索如何写作并发表到各大博客平台的新人,目前虽然已基本弄清写作和发表的基本流程,但是离打造个人知名度还差很大很大一段距离. 尤其处...\n    "
    }, {
        "titile": "gitbook 入门教程之主题插件",
        "href": "/p/405ffb3a8272",
        "content": "\n      主题插件 目前 gitbook 提供三类文档: Book 文档,API 文档和 FAQ 文档. 其中,默认的也是最常使用的就是 Book 文档,...\n    "
    }, {
        "titile": "gitbook 入门教程之发布电子书",
        "href": "/p/43c5c1243b2a",
        "content": "\n      输出目标文件 语法格式: gitbook build [book] [output] 默认情况下,gitbook 输出方式是静态网站,其实 gi...\n    "
    }, {
        "titile": "gitbook 入门教程之导出电子书",
        "href": "/p/4ba3dc1b2e86",
        "content": "\n      gitbook 既可以将源码文件单独输出,也可以仅输出单个文件,常见的导出电子书格式主要有三种(ePub, Mobi, PDF),而这三种格式都...\n    "
    }, {
        "titile": "gitbook 入门教程之实用插件(新增3个插件)",
        "href": "/p/567df1c904f6",
        "content": "\n      插件没有什么逻辑顺序,大家可以按照目录大纲直接定位到感兴趣的插件部分阅读即可. 更多插件正在陆续更新中,敬请期待... 最新更新插件 tbfed...\n    "
    }, {
        "titile": "gitbook 入门教程之插件介绍",
        "href": "/p/565ca653b018",
        "content": "\n      插件是 gitbook 的扩展功能,很多炫酷有用的功能都是通过插件完成的,其中插件有官方插件和第三方插件之分. 推荐官方插件市场 https:/...\n    "
    }, {
        "titile": "gitbook 入门教程之常用命令详解",
        "href": "/p/05c725a561e4",
        "content": "\n      不论是 gitbook-cli 命令行还是 gitbook editor 编辑器都离不开 gitbook 命令的操作使用,所以再次了解下常用命令...\n    "
    }, {
        "titile": "gitbook 入门教程之使用 gitbook.com 在线开发电子书",
        "href": "/p/dc1fef317eed",
        "content": "\n      gitbook 官网是官方提供的图书托管的在线平台,分为新版官网(需要FQ) https://www.gitbook.com/ 和旧版官网(无需...\n    "
    }, {
        "titile": "gitbook 入门教程之使用 gitbook-editor 编辑器开发电子书",
        "href": "/p/2352a69d9da1",
        "content": "\n      亲测,目前已不再支持旧版 gitbook-editor 编辑器,而官网也没有相应的新版编辑器,如果哪位找到了新版编辑器,还望告知! 现在注册 g...\n    "
    }, {
        "titile": "gitbook 入门教程之使用 gitbook-cli 开发电子书",
        "href": "/p/bf0d98dadb2a",
        "content": "\n      gitbook 生成电子书主要有三种方式: gitbook-cli 命令行操作,简洁高效,适合从事软件开发的相关人员. gitbook-edit...\n    "
    }, {
        "titile": "gitbook 入门教程之快速体验",
        "href": "/p/94bdfa2a7725",
        "content": "\n      本文主要介绍三种使用 gitbook 的方式,分别是 gitbook 命令行工具,Gitbook Editor 官方编辑器和 gitbook.c...\n    "
    }, {
        "titile": "gitbook 入门教程之环境要求",
        "href": "/p/4e43397cc4c7",
        "content": "\n      gitbook 是基于 node.js 的命令行工具,首先需要安装并配置好 node.js 环境,然后才能安装gitbook 相关工具. 由于安...\n    "
    }, {
        "titile": "gitbook 入门教程之前置知识",
        "href": "/p/dfcd5b4fd7f1",
        "content": "\n      markdown 基本知识 markdown 是一种简化的 html 语法,相比于 txt 无格式文本更强大. 你可以用专门的软件去编辑 mar...\n    "
    }, {
        "titile": "gitbook 入门教程之 gitbook 简介",
        "href": "/p/3e66be65a933",
        "content": "\n      gitBook 是一个基于node.js的命令行工具,使用 github/git 和 markdown/asciiDoc 构建精美的电子书. g...\n    "
    }, {
        "titile": "git 入门教程之备忘录[译]",
        "href": "/p/d54b48ea873e",
        "content": "\n      备忘录[译] 创建 | Create 克隆一个已存在的仓库 | Clone an existing repository 创建一个新的本地仓库 ...\n    "
    }, {
        "titile": "git 入门教程之知识速查",
        "href": "/p/81b15b5ff7c5",
        "content": "\n      知识速查 创建版本库 初始化项目 git init 从零开始创建项目 示例 克隆项目 git clone 将已有项目拷贝到本地 示例 添加文件 ...\n    "
    }, {
        "titile": "git 入门教程之忽略文件",
        "href": "/p/99a0077c06fa",
        "content": "\n      忽略文件 \"并不是所有的牛奶都叫特仑苏\",在版本控制系统中也有相似的表达,那就是\"并不是所有的文件都需要提交\". 有的是因为没必要提交,比如日志...\n    "
    }, {
        "titile": "git 入门教程之个性化 git",
        "href": "/p/ae5c1b8ab039",
        "content": "\n      前情概要 初识 git 时,我们就已经接触过 git 的基本配置,使用 git config 命令配置用户名和邮箱: 快速回忆一下配置的相关语法...\n    "
    }, {
        "titile": "git 入门教程之里程碑式标签",
        "href": "/p/92366ad31816",
        "content": "\n      \"春风得意马蹄疾,一日看尽长安花\",对于项目也是如此,最值得期待的恐怕就要数新版本发布的时刻了吧?每当发布新版本时要么是版本号命名(比如v0.0...\n    "
    }, {
        "titile": "git 入门教程之协同开发",
        "href": "/p/8386f89907c5",
        "content": "\n      前面我们已经介绍过远程仓库的相关概念,不过那时并没有深入探讨,只是讲解了如何创建远程仓库以及推送最新工作成果到远程仓库,实际上远程仓库对于团队协...\n    "
    }, {
        "titile": "git 入门教程之变基合并",
        "href": "/p/068ad3b9b874",
        "content": "\n      git 鼓励大量使用分支---\"早建分支!多用分支!\",这是因为即便创建再多的分支也不会造成存储或内存开销,并且分支的作用有助于我们分解逻辑工作...\n    "
    }, {
        "titile": "git 入门教程之紧急修复",
        "href": "/p/e530fff00a8d",
        "content": "\n      和往常一样,每个人团队开发者都在自己的本地分支上进行日常工作,相互独立又相互联系,一直以来相安无事,可是某天下午,上级领导突然急冲冲的打电话告诉...\n    "
    }, {
        "titile": "git 入门教程之分支策略",
        "href": "/p/576830c1955c",
        "content": "\n      默认情况下合并分支常常直接使用 git merge 命令,是最方便快速的合并方法.其实这种情况下 git 采用的是 fast forward 模...\n    "
    }, {
        "titile": "git 入门教程之冲突合并",
        "href": "/p/aa7ff6b3e068",
        "content": "\n      如果足够幸运的话,团队成员互不影响,彼此相安无事,大家各自基于 master 分支的某个 commit 创建自己的分支,平时在分支上独立工作,等...\n    "
    }, {
        "titile": "git 入门教程之分支总览",
        "href": "/p/e76cfcf6e019",
        "content": "\n      分支就是一条独立的时间线,既有分支,必有主干,正如一棵树谈到树枝,必有树干一样的道理.我们先前对git 的全部操作默认都是在主干上进行的,这个主...\n    "
    }, {
        "titile": "git 入门教程之分支管理",
        "href": "/p/ffefd7d6e9b5",
        "content": "\n      背景 什么是分支?简单地说,分支就是两个相对独立的时间线,正常情况下,独立的时间线永远不会有交集,彼此不知道对方的存在,只有特定情况下,两条时间...\n    "
    }, {
        "titile": "git 入门教程之远程仓库",
        "href": "/p/f67a8173d982",
        "content": "\n      远程仓库 如果说本地仓库已经足够个人进行版本控制了,那么远程仓库则使多人合作开发成为可能.如果你只是打算自己使用git,你的工作内容不需要发布给...\n    "
    }, {
        "titile": "git 入门教程之删除文件",
        "href": "/p/3f4b60fd0ce0",
        "content": "\n      删除文件 回忆一下文件的常见操作,新增文件,修改文件,删除文件等,新增和修改文件都单独讨论过,现在我们来研究一下如何删除文件. 你可能会说删除文...\n    "
    }, {
        "titile": "markdown 快速入门之掘金入门指南",
        "href": "/p/da5556392602",
        "content": "\n      掘金入门指南 用掘金－Markdown 编辑器写文章 欢迎使用 掘金－Markdown 编辑器撰写技术文章，只专注于内容和技术，不再费心排版的问...\n    "
    }, {
        "titile": "git 入门教程之撤销更改",
        "href": "/p/8386035b7ff1",
        "content": "\n      撤销更改 相信你已经了解了 git 的基本概念,也清楚了工作区,暂存区和版本库的关系,现在让我们用所学的知识继解决实际问题吧! 背景 正常看得见...\n    "
    }, {
        "titile": "git 入门教程之版本控制",
        "href": "/p/f9f737bf37b7",
        "content": "\n      版本控制 我们知道 git 是分布式版本控制系统,所以称被控制对象是版本本身没错,但是从git 命令中发现,并没有版本这个名词,有的只是comm...\n    "
    }, {
        "titile": "git 入门教程之基本概念",
        "href": "/p/ab8857cff897",
        "content": "\n      基本概念 了解工作区,暂存区和版本库的区别和联系有助于我们更好理解 git 的工作流程,了解命令的操作意图. git 和其他版本控制系统如 sv...\n    "
    }, {
        "titile": "git 入门教程之回到过去",
        "href": "/p/df8a80e832b6",
        "content": "\n      背景 现在你已经掌握git的基本操作了,文件发生更改首先使用 git add 添加更改,然后 git commit 提交全部更改,当本地文件再次...\n    "
    }, {
        "titile": "git 入门教程之版本管理",
        "href": "/p/86f09cb22bea",
        "content": "\n      版本管理 背景 在上一节中我们已经成功创建版本库并且已经添加test.txt等文件,这一节我们继续讲解如何进行版本控制. 首先我们先查看test...\n    "
    }, {
        "titile": "git 入门教程之本地仓库",
        "href": "/p/b9a996635bbd",
        "content": "\n      本地仓库 背景 创建工作目录 平时工作时我们习惯对文档分门别类进行管理,.doc .txt 等文本类型的文件习惯存在 doc文件下,开发java...\n    "
    }, {
        "titile": "git 入门教程之实战 git",
        "href": "/p/89f8c7306dad",
        "content": "\n      实战 git git 是一款分布式版本控制系统,可以简单概括: 不要把鸡蛋放在一个篮子里,你的一举一动都在监视中. 实战场景 你作为某项目的其中...\n    "
    }, {
        "titile": "git 入门教程之配置 git",
        "href": "/p/f98618a8da8d",
        "content": "\n      配置 git 安装完成后,还需要最后一步配置就可以愉快使用了,在命令行输入： 因为Git是分布式版本控制系统,所以每个机器都必须自报家门:你的名...\n    "
    }, {
        "titile": "git 入门教程之安装 git",
        "href": "/p/5c5864ecb386",
        "content": "\n      安装 git git 目前支持 Linux/Unix、Solaris、Mac和 Windows 平台上运行,根据自身环境选择安装. Linux ...\n    "
    }, {
        "titile": "git 入门教程之 git 私服搭建教程",
        "href": "/p/e564562baa5a",
        "content": "\n      git 私服搭建教程 前几节我们的远程仓库使用的是 github 网站,托管项目大多是公开的,如果不想让任何人都能看到就需要收费,而且 gith...\n    "
    }, {
        "titile": "git 入门教程之github 教程",
        "href": "/p/b719f3f306a1",
        "content": "\n      github 教程 github 是一个基于 git 的代码托管平台,是平时工作学习的好帮手,学会如何用好 github 网站能够帮助我们更好分...\n    "
    }, {
        "titile": "git 入门教程之初识git",
        "href": "/p/e3a80a5c3872",
        "content": "\n      初识 git git 是一个开源的分布式版本控制系统,用于敏捷高效地处理任何或小或大的项目. 背景 我们都知道,Linus 在1991年创建了开...\n    "
    }, {
        "titile": "git 入门教程之1分钟快速了解 git",
        "href": "/p/563fa2702381",
        "content": "\n      git 入门教程 git 是分布式版本控制系统,是文本文档管理的利器,是帮助你管理文件动态的好帮手. 如果你曾经手动管理过文档,一定有这样的经历...\n    "
    }, {
        "titile": "markdown 快速入门",
        "href": "/p/8e2929ae2a9f",
        "content": "\n      markdown 不止是 HTML 的简化版,更重要的是 txt 的升级版,word 的轻量版,是笔记的最佳载体. markdown 作为一种简...\n    "
    }],
    "readCount": 8277,
    "recommendCount": 175,
    "commentCount": 39
}