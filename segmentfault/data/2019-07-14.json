{"atricles":[{"title":"工具资源系列之给 windows 虚拟机装个 mac","href":"/a/1190000019748184","content":"内置大量常用的开发工具,省去了初学者安装配置环境的麻烦,版本控制工具 svn 默认已安装,web 服务器 apache 默认已安装,编程开发环境 php 默认已安装等等,例子很多就不一一列举了.除此之外,Mac 系统不同于 Windows..."},{"title":"工具资源系列之 github 上各式各样的小徽章从何而来?","href":"/a/1190000019552597","content":"平时大家在在逛 github 时或多或少都看到过项目首页各式各样的小徽章,不知道你是否和我一样好奇这些小徽章都是哪来的呢?"},{"title":"php 学习笔记之日期时间操作一箩筐","href":"/a/1190000019351402","content":"格式化日期时间 date : 格式化日期时间 场景 将当前日期时间或者特定日期时间格式化输出为特定格式的字符串,常用于人性化展示信息. 说明 返回给定时间戳格式化后所产生的日期时间字符串,如果没有给出时间戳则默认..."},{"title":"php 学习笔记之关于时区的那点事","href":"/a/1190000019340509","content":"众所周知,地球绕着太阳转的同时也会自转,因此同一时刻不同地区所接收到太阳照射的情况不同,所以有的地区是日出,有的地区是日落,还有的地区可能是黑夜."},{"title":"php 学习笔记之搭建开发环境(mac版)","href":"/a/1190000019227311","content":"下面我们将搭建最简单的 php 开发环境,每一步都会验证上一步的操作结构,请一步一步跟我一起搭建吧!"},{"title":"工具资源系列之给 windows 虚拟机装个 ubuntu","href":"/a/1190000019189316","content":"前面我们已经介绍了如何在 Windows 宿主机安装 VMware 虚拟机,这节我们将利用安装好的 VMware 软件安装 Ubuntu 系统."},{"title":"工具资源系列之给 windows 虚拟机装个 centos","href":"/a/1190000019185904","content":"前面我们已经介绍了如何在 Windows 宿主机安装 VMware 虚拟机,这节我们将利用安装好的 VMware 软件安装 centos 系统."},{"title":"工具资源系列之给 windows 虚拟机装个 windows","href":"/a/1190000019182452","content":"前面我们已经介绍了如何在 Windows 宿主机安装 VMware 虚拟机,这节我们将利用安装好的 VMware 软件安装 Windows 系统."},{"title":"工具资源系列之给 windows 装个 vmware 虚拟机","href":"/a/1190000019163865","content":"如果长时间处于同一种环境,慢慢得我们会觉得有些无聊,所以适当地出去走走看看外面的世界能带给我们不一样的体验."},{"title":"github 入门教程之 github 访问速度太慢怎么办","href":"/a/1190000019154159","content":"基本上所有的需求都能从 github 上或多或少找到现成的实现方案,再也不用重头开始造轮子而是自定义轮子!"},{"title":"gitbook 入门教程之解决windows热加载失败问题","href":"/a/1190000019115889","content":"gitbook 是一款文档编写利器,可以方便地 markdown 输出成美观优雅的 html ,gitbook serve 启动服务器后,原来相貌平平的 markdown 丑小鸭摇身一变就成了倾国倾城的 html 绝色佳人."},{"title":"git 入门教程之 git bash 竟然不支持 tree 命令","href":"/a/1190000019072810","content":"git bash 是 Windows 用户安装 git 时默认安装的命令行工具,不仅界面漂亮功能也不错,大多数情况下可以替代 Windows 原生的 cmd 命令行."},{"title":"工具资源系列之给虚拟机装个ubantu","href":"/a/1190000018938865","content":"前文我们已经讲解了如何在 mac 系统上安装虚拟机软件,这节我们接着讲解如何利用虚拟机安装 Ubuntu 镜像."},{"title":"工具资源系列之给虚拟机装个centos","href":"/a/1190000018938341","content":"前文我们已经讲解了如何在 mac 系统上安装虚拟机软件,这节我们接着讲解如何利用虚拟机安装 centos 镜像."},{"title":"工具资源系列之给虚拟机装个windows","href":"/a/1190000018937030","content":"前面我们介绍了如何在 mac 宿主机安装 VMware 虚拟机软件,本节我们将继续介绍如何给虚拟机安装镜像,切换不同的操作系统."},{"title":"工具资源系列之给mac装个虚拟机","href":"/a/1190000018936044","content":"mac 系统安装虚拟机目前有两种主流软件,一种是 Parallels Desktop ,另一种是 vmware."},{"title":"关于写作那些事之我该选择哪种格式","href":"/a/1190000018877251","content":"不知道你是否留意过平时写作时的编辑器,有的是 markdown 编辑器,有的是各种富文本编辑器,到底选择哪一个相信你有自己的判断."},{"title":"关于写作那些事之如何写作","href":"/a/1190000018863578","content":"越来越多的人想写个人博客或者打算做自媒体,笔者也是一样.最近在学习如何写博客,分享下创作经历,避免走弯路."},{"title":"关于写作那些事之利用 js 统计各大博客阅读量","href":"/a/1190000018856236","content":"在上一节中,探索利用 csv 文件格式进行文章数据统计,本来以为能够应付一阵子,没想到仅仅一天我就放弃了."},{"title":"关于写作那些事之github告诉我构建失败,然后呢?","href":"/a/1190000018842980","content":"看到这封邮件,一脸懵逼,本地运行 gitbook 服务是正常渲染的,控制台并没有任何报错,谁知道推送到 github 时就报错了!"},{"title":"关于写作那些事之终于还是无法忍受纯人工统计数据","href":"/a/1190000018831893","content":"作为正在探索如何写作并发表到各大博客平台的新人,目前虽然已基本弄清写作和发表的基本流程,但是离打造个人知名度还差很大很大一段距离."},{"title":"gitbook 入门教程之主题插件","href":"/a/1190000018810724","content":"其中,默认的也是最常使用的就是 Book 文档,如果想要了解其他两种文档模式,需要引入相应的主题插件."},{"title":"gitbook 入门教程之发布电子书","href":"/a/1190000018798454","content":"默认情况下,gitbook 输出方式是静态网站,其实 gitbook 的输出方式有三种: website, json,和 ebook."},{"title":"gitbook 入门教程之导出电子书","href":"/a/1190000018783695","content":"gitbook 既可以将源码文件单独输出,也可以仅输出单个文件,常见的导出电子书格式主要有三种(ePub, Mobi, PDF),而这三种格式都依赖于系统本身提供的 ebook-convert 工具."},{"title":"gitbook 入门教程之实用插件(新增3个插件)","href":"/a/1190000018777424","content":"插件没有什么逻辑顺序,大家可以按照目录大纲直接定位到感兴趣的插件部分阅读即可. 更多插件正在陆续更新中,敬请期待... 最新更新插件 tbfed-pagefooter 版权页脚插件 gitalk 评论插件 search-plus 中文搜索插件 g..."},{"title":"gitbook 入门教程之插件介绍","href":"/a/1190000018772621","content":"插件是 gitbook 的扩展功能,很多炫酷有用的功能都是通过插件完成的,其中插件有官方插件和第三方插件之分."},{"title":"gitbook 入门教程之常用命令详解","href":"/a/1190000018771525","content":"不论是 gitbook-cli 命令行还是 gitbook editor 编辑器都离不开 gitbook 命令的操作使用,所以再次了解下常用命令."},{"title":"gitbook 入门教程之使用 gitbook.com 在线开发电子书","href":"/a/1190000018769783","content":"gitbook 官网是官方提供的图书托管的在线平台,分为新版官网(需要FQ) [链接] 和旧版官网(无需FQ) [链接] 两个网站."},{"title":"gitbook 入门教程之使用 gitbook-editor 编辑器开发电子书","href":"/a/1190000018768876","content":"亲测,目前已不再支持旧版 gitbook-editor 编辑器,而官网也没有相应的新版编辑器,如果哪位找到了新版编辑器,还望告知!"},{"title":"gitbook 入门教程之使用 gitbook-cli 开发电子书","href":"/a/1190000018753593","content":"gitbook 生成电子书主要有三种方式: gitbook-cli 命令行操作,简洁高效,适合从事软件开发的相关人员. gitbook-editor 编辑器操作,可视化编辑,适合无编程经验的文学创作者. gitbook.com 官网操作,在线编辑实时发布,..."},{"title":"gitbook 入门教程之快速体验","href":"/a/1190000018734441","content":"本文主要介绍三种使用 gitbook 的方式,分别是 gitbook 命令行工具,Gitbook Editor 官方编辑器和 gitbook.com 官网."},{"title":"gitbook 入门教程之环境要求","href":"/a/1190000018726502","content":"gitbook 是基于 node.js 的命令行工具,首先需要安装并配置好 node.js 环境,然后才能安装gitbook 相关工具."},{"title":"gitbook 入门教程之前置知识","href":"/a/1190000018718268","content":"你可以用专门的软件去编辑 markdown 文件,就像需要使用软件编辑 txt 文件一样,当然也可以什么软件也不用,甚至直接在记事本或命令行书写,只不过这样的缺点就是无法实时预览输出效果,安全依赖个人经验和想象力了."},{"title":"gitbook 入门教程之 gitbook 简介","href":"/a/1190000018711988","content":"gitBook 是一个基于node.js的命令行工具,使用 github/git 和 markdown/asciiDoc 构建精美的电子书."},{"title":"git 入门教程之备忘录[译]","href":"/a/1190000018710712","content":"提交应该是相关更改的包装,例如,修复两个不同的 bug 应该产生两个单独的提交.小的提交让其他开发者更容易理解此次更改,并且万一出错方便回滚.在暂存区这类工具以及暂存部分文件的能力下,git 很容易创建细粒度的提交."},{"title":"git 入门教程之知识速查","href":"/a/1190000018703182","content":"知识速查 创建版本库 初始化项目 git init 从零开始创建项目 示例 {代码...} 克隆项目 git clone 将已有项目拷贝到本地 示例 {代码...} 添加文件 git add 将新文件或已修改文件添加到缓存区 示例 {代码...} 查看..."},{"title":"git 入门教程之 git 私服搭建教程","href":"/a/1190000018700079","content":"前几节我们的远程仓库使用的是 github 网站,托管项目大多是公开的,如果不想让任何人都能看到就需要收费,而且 github 网站毕竟在国外,访问速度太慢,基于上述两点原因,我们有必要搭建自己的 git 服务器."},{"title":"git 入门教程之github 教程","href":"/a/1190000018698455","content":"github 是一个基于 git 的代码托管平台,是平时工作学习的好帮手,学会如何用好 github 网站能够帮助我们更好分享代码或者与其他开发人员合作."},{"title":"git 入门教程之忽略文件","href":"/a/1190000018694352","content":"\"并不是所有的牛奶都叫特仑苏\",在版本控制系统中也有相似的表达,那就是\"并不是所有的文件都需要提交\"."},{"title":"git 入门教程之个性化 git","href":"/a/1190000018676184","content":"初识 git 时,我们就已经接触过 git 的基本配置,使用 git config 命令配置用户名和邮箱:"},{"title":"git 入门教程之里程碑式标签","href":"/a/1190000018667161","content":"\"春风得意马蹄疾,一日看尽长安花\",对于项目也是如此,最值得期待的恐怕就要数新版本发布的时刻了吧?每当发布新版本时要么是版本号命名(比如v0.0.1)或者代号命名(比如Chelsea),不管怎么说这种里程碑阶段总是要留下..."},{"title":"git 入门教程之本地和远程仓库的本质","href":"/a/1190000018652307","content":"远程仓库不一定非得是 github 那种专门的\"中央服务器\",甚至局域网的另外一台电脑也可以充当\"中央服务器\"的角色,因为它存在的最初目的只是方便大家交换彼此的提交记录而已!"},{"title":"git 入门教程之协同开发","href":"/a/1190000018634135","content":"前面我们已经介绍过远程仓库的相关概念,不过那时并没有深入探讨,只是讲解了如何创建远程仓库以及推送最新工作成果到远程仓库,实际上远程仓库对于团队协同开发很重要,不仅仅是团队协同开发的基础,也是代码备份的保..."},{"title":"git 入门教程之变基合并","href":"/a/1190000018628748","content":"git 鼓励大量使用分支---\"早建分支!多用分支!\",这是因为即便创建再多的分支也不会造成存储或内存开销,并且分支的作用有助于我们分解逻辑工作,这样一样其实比维护单一臃肿分支要简单得多!"},{"title":"git 入门教程之紧急修复","href":"/a/1190000018618097","content":"和往常一样,每个人团队开发者都在自己的本地分支上进行日常工作,相互独立又相互联系,一直以来相安无事,可是某天下午,上级领导突然急冲冲的打电话告诉你线上出bug了,需要你紧急修复,下班之前必须解决!"},{"title":"git 入门教程之分支策略","href":"/a/1190000018594726","content":"默认情况下合并分支常常直接使用 git merge 命令,是最方便快速的合并方法.其实这种情况下 git 采用的是 fast forward 模式,特点是删除分支后,会丢失分支信息,好像从来没存在该分支一样,而我们推荐的是recursive ..."},{"title":"git 入门教程之冲突合并","href":"/a/1190000018587960","content":"如果足够幸运的话,团队成员互不影响,彼此相安无事,大家各自基于 master 分支的某个 commit 创建自己的分支,平时在分支上独立工作,等到一段时间后再合并 merge 到 master 分支,这样一样 master 作为各个功能的集大..."},{"title":"git 入门教程之分支总览","href":"/a/1190000018567919","content":"分支就是一条独立的时间线,既有分支,必有主干,正如一棵树谈到树枝,必有树干一样的道理.我们先前对git 的全部操作默认都是在主干上进行的,这个主干也是一种特殊的分支,名为 master 分支."},{"title":"git 入门教程之分支管理","href":"/a/1190000018567748","content":"什么是分支?简单地说,分支就是两个相对独立的时间线,正常情况下,独立的时间线永远不会有交集,彼此不知道对方的存在,只有特定情况下,两条时间线才会相遇,因为相遇,所以相知,因为相知,所以改变!"},{"title":"git 入门教程之远程仓库","href":"/a/1190000018555041","content":"如果说本地仓库已经足够个人进行版本控制了,那么远程仓库则使多人合作开发成为可能.如果你只是打算自己使用git,你的工作内容不需要发布给其他人看,那就用不到远程仓库的概念."},{"title":"git 入门教程之删除文件","href":"/a/1190000018554162","content":"回忆一下文件的常见操作,新增文件,修改文件,删除文件等,新增和修改文件都单独讨论过,现在我们来研究一下如何删除文件."},{"title":"git 入门教程之撤销更改","href":"/a/1190000018553927","content":"相信你已经了解了 git 的基本概念,也清楚了工作区,暂存区和版本库的关系,现在让我们用所学的知识继解决实际问题吧!"},{"title":"git 入门教程之版本控制","href":"/a/1190000018553911","content":"我们知道 git 是分布式版本控制系统,所以称被控制对象是版本本身没错,但是从git 命令中发现,并没有版本这个名词,有的只是commit,所以前几节我一直称其为提交."},{"title":"git 入门教程之基本概念","href":"/a/1190000018553708","content":"基本概念 了解工作区,暂存区和版本库的区别和联系有助于我们更好理解 git 的工作流程,了解命令的操作意图. git 和其他版本控制系统如 svn 的不同之处就是有暂存区的概念. 基本概念 工作区 | Working Directory 正..."},{"title":"git 入门教程之回到过去","href":"/a/1190000018553604","content":"现在你已经掌握git的基本操作了,文件发生更改首先使用 git add 添加更改,然后 git commit 提交全部更改,当本地文件再次发生更改时,仍然需要git add 和 git commit 两步操作,中途如何想查看文件是否发生更改,使用g..."},{"title":"git 入门教程之版本管理","href":"/a/1190000018553527","content":"在上一节中我们已经成功创建版本库并且已经添加test.txt等文件,这一节我们继续讲解如何进行版本控制."},{"title":"git 入门教程之本地仓库","href":"/a/1190000018553406","content":"平时工作时我们习惯对文档分门别类进行管理,.doc .txt 等文本类型的文件习惯存在 doc文件下,开发java js 等源代码文件存在在 src 目录下,这一点很好理解,那么讲解 git的项目我们也要创建一个文件夹,姑且新建一个d..."},{"title":"git 入门教程之实战 git","href":"/a/1190000018552900","content":"git 是一款分布式版本控制系统,可以简单概括: 不要把鸡蛋放在一个篮子里,你的一举一动都在监视中."},{"title":"git 入门教程之配置 git","href":"/a/1190000018533687","content":"配置 git 安装完成后,还需要最后一步配置就可以愉快使用了,在命令行输入： {代码...} 因为Git是分布式版本控制系统,所以每个机器都必须自报家门:你的名字和Email地址. 配置文件 git 提供git config工具,专门用来..."},{"title":"git 入门教程之安装 git","href":"/a/1190000018533651","content":"git 目前支持 Linux/Unix、Solaris、Mac和 Windows 平台上运行,根据自身环境选择安装."},{"title":"git 入门教程之初识git","href":"/a/1190000018528699","content":"我们都知道,Linus 在1991年创建了开源的linux系统,随着不断发展壮大,目前已发展成为最大的服务器系统软件."},{"title":"git 入门教程之1分钟快速了解 git","href":"/a/1190000018528619","content":"如果你曾经手动管理过文档,一定有这样的经历,比如你正在编辑文档,想删除某段落,又担心不久后可能会恢复,此时你可能会先备份然后再删除,或者想要修改某段落,几经修改后发现还是最初的比较好,这是就哭笑不得了..."},{"title":"markdown 快速入门之掘金入门指南","href":"/a/1190000018528557","content":"欢迎使用 掘金－Markdown 编辑器撰写技术文章，只专注于内容和技术，不再费心排版的问题。这是一份简要的 Markdown 引导指南，希望可以帮助您顺利的开始使用 Markdown 编辑器。"},{"title":"markdown 快速入门","href":"/a/1190000018528519","content":"markdown 不止是 HTML 的简化版,更重要的是 txt 的升级版,word 的轻量版,是笔记的最佳载体."}],"collectCount":23}